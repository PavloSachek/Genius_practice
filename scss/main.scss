/* тут вказують селектори до яких надаються стилі. вони є, селектор
тегу
класу
ідентифікатору
атрибуту
нащадка
дитини */

/* h1 { */
/* border: 4px solid black; */
/* описаний вище стиль надає одразу рамки з усіх сторін, ігакше треба писати чотирьма операторами */
/* } */
/* якщо точка попереду то ми звертаємося до класу */
/* .main-title { */
/* color: burlywood; */
/* } */
/* якщо решітка то ми звертаємося до ідентификатору
і ця властивість/стиль надається усім елементам, що вкладені у ідентифікатор сука
АЛЕ ЦЕ НЕ ТИПОВЕ ВИКОРИСТАННЯ
ідентифікатори використовують для внутрішнього переходу по сторінці або  для звернення до ідентифікатору не через стилі,
а через java-script */
/* #chiefs-sec { */
/* font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande", */
/* "Lucida Sans Unicode", Geneva, Verdana, sans-serif; */
/* } */
/* до атрибуту звертаються через квадратні дужки
наприклад атрибут - type у нашої кнопки
тільки у неї є такий атрибут  */
/* [type] { */
/* } */
/* або до конкретних */
/* [type="button"] { */
/* } */
/* але таке використання безглузде, ми роздивляємося тільки варіанти використання звернення.
для чого це можно використати - наприклад є якісь кнопки, які мають атрибут disabled.
тоді ля всіх них буде зручно по ньому звернутися чи надати стиль */
/* .button[disabled] { */
/* } */
/* 
якщо ми звертаємося до наслідуваних елементів, то можемо робити таким чином
що ми вибераєм батьківський елемент а потом вибераємо окремий тег, щоб
надати стиль саме абзацам у даному випадку
 */
/* .main-section > p { */
/* } */
/* НАЙРОСТІШЕ І НАЙРЕКОМЕНДОВАНІШЕ ВИКОРИСТОВУВАТИ СЕЛЕКТОРИ КЛАСІВ */
/*  */
/* далі йдуть псевдокласи
це наведення миші
надання фокусу
та натискання


 */

/* часто прийдеться користуватися переменнимми -змінними
вони вказуються у руті цсс файлу і потім підставляються скрізь
найчастіше це використовується з кольорами , наприклад замість хекс-кольору вписуєтьмя назва
і потім по теексту ставиться. заодно потоім зручно все поміняти в одному місці */

@import "./utils/fonts";
@import "./utils/variables";
@import "./base";
@import "./utils/utils";

.section {
  padding: 48px 0;
}

ul {
  list-style-type: none;
}
/* hero section */
.hero-section {
  padding: 272px 0;
}
.main-title {
  margin-bottom: 0;
  color: #faf4ea;
  font-family: poppins, sans-serif;
  font-weight: 900;
  text-align: center;
  font-size: 128px;
  /* text-transform:capitalize ; */
}
.main-title .accent {
  /* ось використання змінної */
  color: var(--color-brand);
}

.button {
  font: poppins;
  color: #faf4ea;
  background-color: #819b57;
  border: 2px solid #819b57;
  border-radius: 8px;
  cursor: pointer;
}
/* оце нижче - псевдоклас */
.button:hover {
  background-color: #faf4ea;
  color: #465929;
}

/* tradition sec */
.tradition_sec {
  padding-top: 96px;
}

.links {
  color: #faf4ea;

  .links:hover {
    color: #819b57;
  }
}

.advant-list {
  background-color: #819b57;
}
.advant-list li {
  color: #faf4ea;
}
/* для того, щоб задати декількам послідовним тегам якісь параметри і не писати кожному окремо,
можно все огорнути у div та задати клас для опису
наприклад декілька абзаців підряд, щоб не писати одинакове centre/font-size */
